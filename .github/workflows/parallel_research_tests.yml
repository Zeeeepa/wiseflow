name: Parallel Research Tests

on:
  push:
    branches: [ master ]
    paths:
      - 'core/plugins/connectors/research/**'
      - 'tests/unit/core/test_parallel_research_manager.py'
      - 'tests/integration/test_parallel_research.py'
      - 'tests/system/**/*parallel_research*.py'
      - 'api_server.py'
      - 'dashboard/routes.py'
  pull_request:
    branches: [ master ]
    paths:
      - 'core/plugins/connectors/research/**'
      - 'tests/unit/core/test_parallel_research_manager.py'
      - 'tests/integration/test_parallel_research.py'
      - 'tests/system/**/*parallel_research*.py'
      - 'api_server.py'
      - 'dashboard/routes.py'
  workflow_dispatch:
    inputs:
      run_slow_tests:
        description: 'Run slow tests'
        required: false
        default: 'false'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-mock pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run unit tests
      run: |
        pytest tests/unit/core/test_parallel_research_manager.py -v --cov=core.plugins.connectors.research.parallel_manager
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: unit-test-coverage
        path: .coverage

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-mock pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run integration tests
      run: |
        pytest tests/integration/test_parallel_research.py -v --cov=core.plugins.connectors.research.parallel_manager
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-coverage
        path: .coverage

  system-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.run_slow_tests == 'true'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-mock pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run error handling tests
      run: |
        pytest tests/system/error_handling/test_parallel_research_error_handling.py -v
    
    - name: Run workflow tests
      run: |
        pytest tests/system/workflows/test_parallel_research_workflow.py -v
    
    - name: Run performance tests
      run: |
        pytest tests/system/performance/test_parallel_research_performance.py -v

  scheduled-performance-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-mock pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run performance tests
      run: |
        pytest tests/system/performance/test_parallel_research_performance.py -v --cov=core.plugins.connectors.research.parallel_manager
    
    - name: Generate performance report
      run: |
        python -m scripts.generate_performance_report
    
    - name: Upload performance report
      uses: actions/upload-artifact@v4
      with:
        name: performance-report
        path: performance_report.html

  coverage-report:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: always()
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov coverage
    
    - name: Download unit test coverage
      uses: actions/download-artifact@v4
      with:
        name: unit-test-coverage
    
    - name: Download integration test coverage
      uses: actions/download-artifact@v4
      with:
        name: integration-test-coverage
    
    - name: Combine coverage reports
      run: |
        coverage combine
        coverage report
        coverage html
    
    - name: Upload combined coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/

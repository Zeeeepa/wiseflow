from . import Entity, Relationship
from . import config
from ..analysis import Entity, Relationship, KnowledgeGraph
from ..analysis.data_mining import analyze_info_items, get_analysis_for_focus
from ..analysis.entity_linking import (
from ..connectors.academic import academic_connector
from ..connectors.code_search import code_search_connector
from ..connectors.github import github_connector
from ..connectors.web import web_connector
from ..connectors.youtube import youtube_connector
from ..knowledge.graph import KnowledgeGraphBuilder
from ..llms.openai_wrapper import openai_llm as llm
from ..utils.general_utils import get_logger
from ..utils.general_utils import get_logger, normalize_url
from ..utils.pb_api import PbTalker
from .__version__ import __version__
from ._typing import OutCallback
from .async_configs import BrowserConfig, CrawlerRunConfig
from .async_configs import BrowserConfig, CrawlerRunConfig, CacheMode
from .async_crawler_strategy import AsyncCrawlerStrategy
from .async_database import AsyncDatabaseManager
from .async_logger import AsyncLogger
from .async_logger import AsyncLogger, LogLevel
from .async_webcrawler import AsyncWebCrawler
from .cache_context import CacheContext
from .cache_context import CacheMode
from .config import (
from .config import MIN_WORD_THRESHOLD, IMAGE_DESCRIPTION_MIN_WORD_THRESHOLD, IMAGE_SCORE_THRESHOLD
from .config import SCREENSHOT_HEIGHT_TRESHOLD, DOWNLOAD_PAGE_TIMEOUT
from .content_scraping_strategy import (
from .content_scraping_strategy import ContentScrapingStrategy, WebScrapingStrategy
from .data_mining import (
from .data_mining import extract_entities, extract_topics
from .elements import AnchorElement, ListElement
from .entity_extraction import (
from .entity_extraction import extract_entities, extract_relationships
from .entity_linking import (
from .entity_linking import link_entities, merge_entities
from .get_info_prompts import *
from .graph import (
from .html2text import CustomHTML2Text
from .js_snippet import load_js_script
from .markdown_generation_strategy import DefaultMarkdownGenerator
from .markdown_generation_strategy import MarkdownGenerationStrategy
from .models import AsyncCrawlResponse
from .models import CrawlResult
from .models import CrawlResult, MarkdownGenerationResult
from .models import MarkdownGenerationResult
from .models import ScrapingResult, MediaItem, Link, Media, Links
from .mp_crawler import mp_crawler
from .mp_scraper import mp_scraper
from .pattern_recognition import (
from .pb_api import PbTalker
from .processor import NaivePDFProcessorStrategy  # Assuming your current PDF code is in pdf_processor.py
from .reference_extractor import ReferenceExtractor
from .reference_indexer import ReferenceIndexer
from .reference_linker import ReferenceLinker
from .scraper_data import ScraperResultData
from .simple_crawler import simple_crawler
from .ssl_certificate import SSLCertificate
from .trend_analysis import (
from .user_agent_generator import UAGen, ValidUAGenerator # , OnlineUAGenerator
from .user_agent_generator import ValidUAGenerator
from .utils import (
from .utils import *
from .utils import ensure_content_dirs, generate_content_hash
from .utils import get_chromium_path
from .utils import get_error_context, create_box_message
from PIL import Image
from PIL import Image, ImageDraw, ImageFont
from __future__ import annotations
from __init__ import BackendService
from abc import ABC, abstractmethod
from agents.get_info import get_author_and_publish_date, get_info, get_more_related_urls
from agents.get_info import pre_process
from agents.get_info_prompts import *
from analysis.multimodal_analysis import process_item_with_images, process_focus_for_multimodal_analysis
from analysis.multimodal_knowledge_integration import integrate_multimodal_analysis_with_knowledge_graph
from array import array
from base64 import b64encode
from bs4 import BeautifulSoup
from bs4 import BeautifulSoup, Comment, element, Tag, NavigableString
from bs4 import NavigableString, Comment
from bs4 import PageElement, Tag
from collections import Counter, defaultdict
from collections import defaultdict
from collections import deque
from colorama import Fore
from colorama import Fore, Style, init
from contextlib import asynccontextmanager
from core.agents.get_info import (
from core.agents.insights import (
from core.analysis import Entity
from core.analysis import Entity, Relationship
from core.analysis import Entity, Relationship, KnowledgeGraph
from core.analysis import KnowledgeGraph, Entity, Relationship
from core.analysis.entity_extraction import extract_entities
from core.analysis.entity_linking import (
from core.analysis.entity_linking import EntityRegistry, EntityLinker
from core.analysis.multimodal_analysis import process_item_with_images
from core.analysis.multimodal_knowledge_integration import integrate_multimodal_analysis_with_knowledge_graph
from core.api.client import WiseFlowClient, AsyncWiseFlowClient
from core.backend import dashscope_llm
from core.config import ENABLE_EVENT_SYSTEM
from core.config import PROJECT_DIR
from core.config import config
from core.config import config, PROJECT_DIR
from core.connectors import (
from core.connectors import ConnectorBase, DataItem
from core.connectors import DataItem
from core.crawl4ai import (
from core.crawl4ai import AsyncWebCrawler, CacheMode
from core.crawl4ai.async_configs import AsyncConfigs
from core.crawl4ai.processors.pdf import extract_text_from_pdf
from core.event_system import (
from core.export import get_export_manager
from core.export.formats.csv_exporter import export_to_csv, export_to_csv_with_config, csv_to_dict
from core.export.formats.json_exporter import export_to_json, export_to_json_with_config, json_to_dict, export_to_jsonl
from core.export.formats.pdf_exporter import export_to_pdf, export_to_pdf_with_config, html_to_pdf
from core.export.formats.xml_exporter import export_to_xml, export_to_xml_with_config, xml_to_dict
from core.export.webhook import WebhookManager, get_webhook_manager
from core.export.webhook import get_webhook_manager
from core.general_process import main_process, generate_insights_for_focus
from core.imports import (
from core.initialize import (
from core.knowledge.graph import (
from core.llms.advanced.specialized_prompting import (
from core.llms.litellm_wrapper import LiteLLMWrapper
from core.llms.litellm_wrapper import litellm_llm
from core.llms.litellm_wrapper import litellm_llm, litellm_llm_async
from core.llms.openai_wrapper import openai_llm
from core.llms.openai_wrapper import openai_llm as llm
from core.plugins import (
from core.plugins import PluginBase
from core.plugins import PluginBase, PluginManager
from core.plugins import PluginManager
from core.plugins.analyzers import AnalyzerBase
from core.plugins.analyzers.entity_analyzer import EntityAnalyzer
from core.plugins.analyzers.trend_analyzer import TrendAnalyzer
from core.plugins.base import AnalyzerPlugin
from core.plugins.base import ConnectorPlugin
from core.plugins.base import ProcessorPlugin
from core.plugins.base import registry
from core.plugins.connectors import ConnectorBase, DataItem
from core.plugins.connectors.code_search_connector import CodeSearchConnector
from core.plugins.connectors.github_connector import GitHubConnector
from core.plugins.connectors.research.configuration import Configuration
from core.plugins.connectors.research.configuration import Configuration, ResearchMode, SearchAPI
from core.plugins.connectors.research.configuration import Configuration, SearchAPI
from core.plugins.connectors.research.graph import graph as linear_graph
from core.plugins.connectors.research.graph_workflow import graph as graph_based_research
from core.plugins.connectors.research.multi_agent import graph as multi_agent_graph
from core.plugins.connectors.research.prompts import (
from core.plugins.connectors.research.state import (
from core.plugins.connectors.research.state import ReportState, Sections
from core.plugins.connectors.research.state import Sections, Section
from core.plugins.connectors.research.utils import (
from core.plugins.connectors.research.utils import format_sections
from core.plugins.connectors.research_connector import ResearchConnector
from core.plugins.connectors.youtube_connector import YouTubeConnector
from core.plugins.loader import load_all_plugins, get_processor, get_analyzer
from core.plugins.processors import ProcessedData
from core.plugins.processors import ProcessorBase
from core.plugins.processors import ProcessorBase, ProcessedData
from core.plugins.processors.text.text_processor import TextProcessor
from core.plugins.processors.text_processor import TextProcessor
from core.references import (
from core.references import ReferenceManager
from core.references import ReferenceManager, Reference
from core.resource_monitor import ResourceMonitor
from core.resource_monitor import resource_monitor
from core.task import AsyncTaskManager, Task, create_task_id
from core.task import TaskManager, AsyncTaskManager
from core.task import TaskManager, Task, create_task_id
from core.task.config import TaskConfig
from core.task.data_mining_manager import data_mining_manager
from core.task.monitor import ResourceMonitor, monitor_resources, check_task_status, detect_idle_tasks, shutdown_task, configure_shutdown_settings
from core.task.monitor import TaskMonitor, TaskStatus, task_monitor
from core.task.monitor import initialize_resource_monitor, monitor_resources
from core.task.monitor import task_monitor
from core.task_manager import (
from core.task_manager import TaskPriority, TaskStatus
from core.thread_pool_manager import (
from core.thread_pool_manager import thread_pool_manager, TaskPriority
from core.utils.error_handling import (
from core.utils.error_handling import handle_exceptions, ConnectionError
from core.utils.error_handling import handle_exceptions, TaskError
from core.utils.error_handling import handle_exceptions, WiseflowError
from core.utils.general_utils import (
from core.utils.general_utils import extract_and_convert_dates, isURL
from core.utils.general_utils import get_logger
from core.utils.pb_api import PbTalker
from core.utils.schema_update import update_schema, migrate_existing_data
from crawl4ai import AsyncWebCrawler, CacheMode
from crawl4ai import BrowserConfig, AsyncWebCrawler, CrawlerRunConfig, CacheMode
from crawl4ai import CrawlResult
from crawl4ai import CrawlerRunConfig, BrowserConfig, LXMLWebScrapingStrategy, DefaultMarkdownGenerator
from crawl4ai.async_crawler_strategy import AsyncCrawlerStrategy
from crawl4ai.async_logger import AsyncLogger
from crawl4ai.content_scraping_strategy import ContentScrapingStrategy
from crawl4ai.hub import BaseCrawler
from crawl4ai.models import AsyncCrawlResponse, ScrapingResult 
from crawl4ai.utils import optimize_html, get_home_folder
from crawlee.playwright_crawler import PlaywrightCrawler, PlaywrightCrawlingContext, PlaywrightPreNavigationContext
from cryptography.fernet import Fernet
from dashboard.data_mining_api import router as data_mining_api_router
from dashboard.notification import NotificationManager, configure_notifications
from dashboard.plugins import dashboard_plugin_manager
from dashboard.routes import router as dashboard_router
from dashboard.search_api import router as search_api_router
from dashboard.visualization import Dashboard, Visualization, DashboardManager
from dashboard.visualization import KnowledgeGraphVisualization
from dashboard.visualization import TrendVisualization
from dashboard.visualization.knowledge_graph import visualize_knowledge_graph, filter_knowledge_graph
from dashboard.visualization.trends import visualize_trend, detect_trend_patterns
from dataclasses import asdict
from dataclasses import dataclass
from dataclasses import dataclass, asdict, field
from dataclasses import dataclass, field
from dataclasses import dataclass, fields
from datetime import datetime
from datetime import datetime, timedelta
from datetime import timedelta
from docx import Document
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
from docx.oxml.ns import qn
from docx.shared import Pt, RGBColor
from dotenv import load_dotenv
from enum import Enum
from enum import Enum 
from enum import Enum, auto
from environment variables, with proper defaults and validation.
from extracted information across different data sources.
from fake_useragent import UserAgent
from fastapi import APIRouter, HTTPException, Body
from fastapi import APIRouter, HTTPException, Body, UploadFile, File, Form, BackgroundTasks
from fastapi import APIRouter, Request
from fastapi import FastAPI, BackgroundTasks
from fastapi import FastAPI, HTTPException, Depends, Header, Request, BackgroundTasks, status
from fastapi import FastAPI, HTTPException, Depends, Query
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import HTMLResponse
from fastapi.responses import JSONResponse
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from flask import Flask, render_template, jsonify, request, redirect, url_for
from functools import lru_cache
from functools import wraps
from general_process import main_process, wiseflow_logger, pb
from general_utils import get_logger_level
from general_utils import isChinesePunctuation
from get_report import get_report, logger, pb
from get_search import search_insight
from gne import GeneralNewsExtractor
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError
from io import BytesIO
from itertools import chain
from langchain.chat_models import init_chat_model
from langchain_core.messages import HumanMessage, SystemMessage
from langchain_core.messages import HumanMessage, SystemMessage, AIMessage
from langchain_core.runnables import RunnableConfig
from langdetect.lang_detect_exception import LangDetectException
from langgraph.constants import Send
from langgraph.graph import START, END, StateGraph
from langgraph.types import interrupt, Command
from llms.openai_wrapper import openai_llm as llm
from loguru import logger
from lxml import etree
from lxml import html
from lxml import html as lhtml
from nltk.chunk import ne_chunk
from nltk.corpus import stopwords
from nltk.sentiment import SentimentIntensityAnalyzer
from nltk.stem import PorterStemmer
from nltk.tag import pos_tag
from nltk.tokenize import sent_tokenize, word_tokenize
from nltk.tokenize import word_tokenize
from openai import AsyncOpenAI as OpenAI
from openai import RateLimitError, APIError
from openai_wrapper import openai_llm as llm
from packaging import version
from pathlib import Path
from pb_api import PbTalker
from pb_exporter import PbExporter
from playwright.async_api import Page, Error, BrowserContext
from playwright.async_api import TimeoutError as PlaywrightTimeoutError
from playwright_stealth import StealthConfig
from pocketbase import PocketBase  # Client also works the same
from pocketbase.client import FileUpload
from prompts import image_system, image_system_en
from pydantic import BaseModel
from pydantic import BaseModel, Field
from pydantic import BaseModel, HttpUrl
from ratelimit import limits, sleep_and_retry
from requests.exceptions import InvalidSchema
from scipy import stats
from scrapers import *
from scrapers import browser_cfg
from scrapers import crawler_config
from scrapers import mp_scraper
from sklearn.cluster import DBSCAN
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
from socket import gaierror
from statsmodels.tsa.seasonal import seasonal_decompose
from statsmodels.tsa.stattools import adfuller
from textwrap import wrap
from time import time
from tranlsation_volcengine import text_translate
from typing import  Generator, Iterable
from typing import Any, Dict
from typing import Any, Dict, List
from typing import Any, Dict, List, Optional, Union
from typing import Any, Dict, List, Optional, Union, Callable
from typing import Any, Dict, List, Optional, Union, Set, Tuple
from typing import Any, Dict, List, Optional, Union, Tuple
from typing import Any, Optional, Dict 
from typing import BinaryIO, Optional, List, Dict
from typing import Callable, Dict, Any, List, Optional, Union
from typing import Dict
from typing import Dict, Any, List, Optional
from typing import Dict, Any, List, Optional, Callable
from typing import Dict, Any, Optional
from typing import Dict, Any, Optional, Callable, List
from typing import Dict, Any, Optional, Callable, List, Set, Union, Awaitable
from typing import Dict, Any, Optional, Callable, Type, Union, List
from typing import Dict, Any, Optional, List
from typing import Dict, Any, Optional, List, Callable, Awaitable
from typing import Dict, Any, Optional, List, Type, Union, Set
from typing import Dict, Any, Optional, List, Union
from typing import Dict, Any, Optional, Tuple
from typing import Dict, List, Any
from typing import Dict, List, Any, Optional
from typing import Dict, List, Any, Optional, Callable
from typing import Dict, List, Any, Optional, Callable, Awaitable
from typing import Dict, List, Any, Optional, Set
from typing import Dict, List, Any, Optional, Set, Tuple
from typing import Dict, List, Any, Optional, Union
from typing import Dict, List, Any, Optional, Union, Awaitable
from typing import Dict, List, Any, Optional, Union, Callable
from typing import Dict, List, Any, Optional, Union, Callable, Awaitable, Set
from typing import Dict, List, Any, Optional, Union, Callable, Awaitable, Tuple, Set
from typing import Dict, List, Any, Optional, Union, Callable, Protocol
from typing import Dict, List, Any, Optional, Union, Set, Tuple
from typing import Dict, List, Any, Optional, Union, Tuple
from typing import Dict, List, Any, Optional, Union, Tuple, Set
from typing import Dict, List, Any, Optional, Union, Type
from typing import Dict, List, Optional
from typing import Dict, List, Optional, Any, TypedDict, Union
from typing import Dict, List, Optional, Tuple, Union
from typing import Dict, Optional
from typing import List
from typing import List, Dict, Any
from typing import List, Dict, Any, Optional
from typing import List, Dict, Any, Optional, Set
from typing import List, Dict, Any, Optional, Tuple, Set, Union
from typing import List, Dict, Any, Optional, Tuple, Set, Union, Callable
from typing import List, Dict, Any, Optional, Tuple, Union
from typing import List, Dict, Any, Optional, Union
from typing import List, Dict, Optional, Callable, Awaitable, Union, Any
from typing import List, Dict, Optional, Union
from typing import List, Optional
from typing import Literal
from typing import Literal, Dict, List, Any, Optional
from typing import Literal, Optional
from typing import Literal, Tuple
from typing import Optional
from typing import Optional, Dict
from typing import Optional, Dict, Any
from typing import Optional, Dict, Any, Tuple
from typing import Optional, Dict, List, Any, Tuple
from typing import Optional, List, Union, Dict
from typing import Sequence
from typing import Union
from typing import Union, List
from unittest.mock import patch, MagicMock
from urllib.parse import parse_qs, urlparse
from urllib.parse import quote
from urllib.parse import urljoin
from urllib.parse import urlparse
from urllib.parse import urlparse, parse_qs
from urllib.parse import urlparse, quote_plus
from urllib.parse import urlparse, urljoin
from urllib.parse import urlparse, urlunparse
from urllib.robotparser import RobotFileParser
from utils.general_utils import extract_and_convert_dates
from utils.general_utils import get_logger
from utils.general_utils import is_chinese
from utils.general_utils import normalize_url, url_pattern
from utils.pb_api import PbTalker
from volcengine.ApiInfo import ApiInfo
from volcengine.Credentials import Credentials
from volcengine.ServiceInfo import ServiceInfo
from volcengine.base.Service import Service
import OpenSSL.crypto
import PyPDF2
import abc
import aiofiles
import aiohttp
import aiosqlite
import argparse
import arxiv
import asyncio
import base64
import cProfile
import chardet
import concurrent.futures
import csv
import difflib
import docx
import feedparser
import gc
import hashlib
import hmac
import html
import html.entities
import html.parser
import http.server
import httpx
import importlib
import importlib.util
import inspect
import io
import ipaddress
import json
import json  # Added for serialization/deserialization
import langdetect
import logging
import lxml
import matplotlib.dates as mdates
import matplotlib.pyplot as plt
import mimetypes
import networkx as nx
import nltk
import numpy as np
import os
import os, re
import os, sys
import pandas as pd
import pkgutil
import platform
import pstats
import psutil
import random
import re
import re, os
import requests
import seaborn as sns
import shutil
import signal
import socket
import socketserver
import sqlite3
import ssl
import string
import subprocess
import sys
import tempfile
import textwrap
import threading
import time
import traceback
import unicodedata
import unittest
import urllib.parse as urlparse
import uuid
import uvicorn
import warnings
import websockets
import xml.dom.minidom
import xml.etree.ElementTree as ET
import xxhash
